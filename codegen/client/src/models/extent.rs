/*
 * A sample API conforming to the draft standard OGC API - Features - Part 1: Core
 *
 * This is a sample OpenAPI definition that conforms to the conformance classes \"Core\", \"GeoJSON\", \"HTML\" and \"OpenAPI 3.0\" of the draft standard \"OGC API - Features - Part 1: Core\".  This example is a generic OGC API Features definition that uses path parameters to describe all feature collections and all features. The generic OpenAPI definition does not provide any details on the collections or the feature content. This information is only available from accessing the feature collection resources.  There is [another example](ogcapi-features-1-example2.yaml) that specifies each collection explicitly.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: info@example.org
 * Generated by: https://openapi-generator.tech
 */

/// Extent : The extent of the features in the collection. In the Core only spatial and temporal extents are specified. Extensions may add additional members to represent other extents, for example, thermal or pressure ranges.



#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct Extent {
    #[serde(rename = "spatial", skip_serializing_if = "Option::is_none")]
    pub spatial: Option<crate::models::ExtentSpatial>,
    #[serde(rename = "temporal", skip_serializing_if = "Option::is_none")]
    pub temporal: Option<crate::models::ExtentTemporal>,
}

impl Extent {
    /// The extent of the features in the collection. In the Core only spatial and temporal extents are specified. Extensions may add additional members to represent other extents, for example, thermal or pressure ranges.
    pub fn new() -> Extent {
        Extent {
            spatial: None,
            temporal: None,
        }
    }
}


